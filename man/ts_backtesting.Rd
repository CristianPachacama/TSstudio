% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train_functions.R
\name{ts_backtesting}
\alias{ts_backtesting}
\title{Evaluation Function for Forecasting Models}
\usage{
ts_backtesting(ts.obj, models = "abehntw", periods = 6, error = "MAPE",
  window_size = 3, h = 3, plot = TRUE, a.arg = NULL,
  b.arg = list(linear_trend = TRUE, seasonal = TRUE, niter = 1000, ping = 100,
  family = "gaussian", seed = 1234), e.arg = NULL, h.arg = NULL,
  n.arg = NULL, t.arg = NULL, w.arg = NULL, parallel = FALSE)
}
\arguments{
\item{ts.obj}{A univariate time series object of a class "ts"}

\item{models}{String, define the type of models to use in the training function:

 'a' - auto.arima (forecast package)
 
 'b' - Bayesian Structural Time Series (bsts package)
 
 'e' - ets (forecast package) 
 
 'h' - hybrid timse series model (forecastHybrid package) 
 
 'n' - Neural Network Time Series (forecast package)
 
 't' - tbats (forecast package)
 
 'w' - Holt Winters (stats package)}

\item{periods}{The number of periods to evaluate the models (with a minimum of 2)}

\item{error}{The type of error to evaluate by - "MAPE"  (default) or "RMSE"}

\item{window_size}{An integer, the size of the backtesting window}

\item{h}{Integer, the horizon of the selected forecasting model}

\item{plot}{Logical, if TRUE desplay a plot with the backtesting progress}

\item{a.arg}{List, an optional arguments to pass to the auto.arima function}

\item{b.arg}{List, an optional arguments to pass to the bsts function}

\item{e.arg}{List, an optional arguments to pass to the ets function}

\item{h.arg}{List, an optional arguments to pass to the hybridModel function}

\item{n.arg}{List, an optional arguments to pass to the nnetar function}

\item{t.arg}{List, an optional arguments to pass to the tbats function}

\item{w.arg}{List, an optional arguments to pass to the Holtwinters function}

\item{parallel}{Logical, if TRUE use parallel option when applicable (auto.arima, hybridModel)}
}
\description{
Performance evaluation function for forecasting models, by training and testing the performance
of each model over a sequence of periods to identify the performance of a model over time  
(both accuracy and stability)
}
\examples{
\dontrun{
data(USgas)
ts_evaluate(USgas, periods = 12, h = 12)
}
}
